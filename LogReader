using MSDataAccess;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace CommsLogReader
{
    class Program
    {
        private static String deviceimeino, uid, ignition, digitalinputone, digitalinputtwo, latitude, longitude, gpsspeed, gpsdirection, gpsodometer, vehiclebatteryvoltage, vehicleinputvoltage, eventtimestamp, events, locationtimestamp, cellullarareacode, idofmobiletower, digitaloutput;
        static void Main(string[] args)
        {
            String line, data=null;
            System.IO.StreamReader file = new System.IO.StreamReader("D:\\ERM_log\\ERM.log.2016-09-21.txt");
           // System.IO.StreamReader file = new System.IO.StreamReader(filename);
            // string myString = file.ReadToEnd().Replace(Environment.NewLine, "");
            while ((line = file.ReadLine()) != null)
            //while ((myString = file.ReadLine()) != null)
            {
                try
                {
                    if (line.Contains("polling"))
                    {
                        string[] temp = line.Split('$'); 
                        processPacket("$"+temp[1]);
                    } 
                }
                catch (Exception e)
                {
                    Console.WriteLine("Exception in Inserting packet >>> " + line);
                }
            } 
                Console.ReadLine();
           }

                 

        private static void processPacket(string dataPacket)
        {
            try
            {
                object[] obj = new object[20];
                String[] dataArray = dataPacket.Split(',');
                if (dataArray[4].Equals("01"))
                {

                    obj[0] = dataArray[0].Replace("$SLU", "");
                    obj[1] = dataArray[2];
                    //eventtimestamp= getTimeStamp(dataArray[3]);
                    obj[2] = dataArray[3];
                    obj[3] = dataArray[4];
                    obj[4] = dataArray[5];
                    obj[5] = getLatitude(dataArray[6].Replace("+", ""));
                    obj[6] = getLongitude(dataArray[7].Replace("+", ""));
                    obj[7] = dataArray[8];
                    obj[8] = dataArray[9];
                    obj[9] = dataArray[10];
                    obj[10] = dataArray[11];
                    obj[11] = dataArray[12];
                    obj[12] = dataArray[15];
                    obj[13] = dataArray[16];

                    obj[14] = dataArray[15];
                    obj[15] = dataArray[13];
                    obj[16] = dataArray[14];

                    obj[17] = dataArray[18];
                    obj[18] = dataPacket;
                    obj[19] = System.Threading.Thread.CurrentThread.ManagedThreadId.ToString();

                    DataAccess.ExecuteDataset("Data Source=115.112.171.121;Initial Catalog=Commserver;MultipleActiveResultSets=true;Persist Security Info=True;User ID=SUNTELEADMIN;Password=Welcome2tata", "Commsserver_ERM_Device", obj);
                    Console.WriteLine("Inserting packet >>> " + dataPacket);
                }
            }
            catch (Exception e)
            {

            }
        }

        private static string getLongitude(string longitude)
        {
            try
            {
                double lonSplit = 0.0, lonSplittemp = 0.0;
                lonSplit = Convert.ToDouble(longitude.Substring(0, 3));
                lonSplittemp = Convert.ToDouble(longitude.Substring(3, 7));
                double finallon = (lonSplit + (lonSplittemp / 60));
                return finallon.ToString();
            }
            catch (Exception e)
            {
                return "0";
            }
        }

        private static string getLatitude(string latitude)
        {
            try
            {
                //1302.8168 
                double latSplit = 0, latSplittemp = 0;
                latSplit = Convert.ToDouble(latitude.Substring(0, 2));
                latSplittemp = Convert.ToDouble(latitude.Substring(2, 7));
                double finallat = (latSplit + (latSplittemp / 60));
                return finallat.ToString();
            }
            catch (Exception e)
            {
                return "0";
            }
        }

        private static void readTextfile()
        { 
            object[] obj = new object[15];
            string line;
            System.IO.StreamReader file = new System.IO.StreamReader("c:\\Users\\Ramesh\\Desktop\\rfid.txt");
            while ((line = file.ReadLine()) != null)
            {
                try
                {
                    string AlertdateTime;
                    String[] dataArray = line.Split('|');
                    string AlertUID = dataArray[1];
                    string AlertType = dataArray[2];
                    string AlertValue = dataArray[4];
                    string AlertLat = dataArray[5];
                    string AlertLon = dataArray[6];
                    string AlertSpeed = dataArray[7];
                    if (dataArray[8].Length == 12)
                        AlertdateTime = AlertDatetimetoLocalTime(dataArray[8]);
                    else
                        AlertdateTime = "0";
                    string AlertDirection = dataArray[9];
                    string AlertGPSStatus = dataArray[10];
                    string AlertDummy = dataArray[11];
                    string AlertIgnition = dataArray[12];
                    string AlertGPSODO = dataArray[13];
                    string AlertImeiNumber = dataArray[14];

                    obj[0] = AlertUID;
                    obj[1] = AlertType;
                    obj[2] = AlertValue;
                    obj[3] = AlertLat;
                    obj[4] = AlertLon;
                    obj[5] = AlertSpeed;
                    obj[6] = AlertdateTime;
                    obj[7] = AlertDirection;
                    obj[8] = AlertGPSStatus;
                    obj[9] = AlertDummy;
                    obj[10] = AlertIgnition;
                    obj[11] = AlertGPSODO;
                    obj[12] = AlertImeiNumber;
                    obj[13] = line;
                    obj[14] = Thread.CurrentThread.ManagedThreadId;
                    DataAccess.ExecuteDataset("Data Source=221.134.198.179;Initial Catalog=Commserver;MultipleActiveResultSets=true;Persist Security Info=True;User ID=sa;Password=Victory99", "Commsserver_Insert_Proteus_Alerts", obj);
                    Console.WriteLine("Inserted packet >>> " + line);
                }
                catch (Exception e)
                {
                    Console.WriteLine("Exception in readTextfile: " + e.ToString());
                }

            }
        }

        //private static string AlertDatetimetoLocalTime(string alertdatetime)
        //{
        //    String localTimeFormat, localDateFormat = null;
        //    try
        //    { //250615 082511
        //        localTimeFormat = alertdatetime.Substring(6, 2) + ":" + alertdatetime.Substring(8, 2) + ":" + alertdatetime.Substring(10, 2);
        //        localDateFormat = "20" + alertdatetime.Substring(4, 2) + "-" + alertdatetime.Substring(2, 2) + "-" + alertdatetime.Substring(0, 2);
        //        string strDate = DateTime.Now.ToString(localDateFormat + " " + localTimeFormat);
        //       // DateTime enteredDate = DateTime.Parse(strDate);
        //        //DateTime enteredDat = enteredDate.AddMinutes(330);
        //        return strDate;
        //    }
        //    catch (Exception e)
        //    {
        //        return "exception";
        //    }

        //}

        private static string AlertDatetimetoLocalTime(string alertdatetime)
        {
            String localTimeFormat, localDateFormat = null;
            try
            { //250615 082511
                //DateTime utcdatee = DateTime.ParseExact("6/15/2014 12:00:00 AM", "M/dd/yyyy h:mm:ss tt", CultureInfo.InvariantCulture);
                //var istdatee = TimeZoneInfo.ConvertTimeFromUtc(utcdatee, TimeZoneInfo.FindSystemTimeZoneById("India Standard Time"));
                //localTimeFormat = alertdatetime.Substring(6, 2) + ":" + alertdatetime.Substring(8, 2) + ":" + alertdatetime.Substring(10, 2);
                //localDateFormat = alertdatetime.Substring(2, 2) + "/" + alertdatetime.Substring(0, 2) + "/" + "20" + alertdatetime.Substring(4, 2);

                localTimeFormat = alertdatetime.Substring(6, 2) + ":" + alertdatetime.Substring(8, 2) + ":" + alertdatetime.Substring(10, 2);
                localDateFormat = "20" + alertdatetime.Substring(4, 2) + "-" + alertdatetime.Substring(2, 2) + "-" + alertdatetime.Substring(0, 2);
                string strDate = localDateFormat + " " + localTimeFormat;
                //2015-12-25 14:51:30.673
                //DateTime utcdate = DateTime.ParseExact(strDate + getAmPm(alertdatetime.Substring(6, 2)), "M/dd/yyyy h:mm:ss tt", CultureInfo.InvariantCulture);
                //var istdate = TimeZoneInfo.ConvertTimeFromUtc(utcdate, TimeZoneInfo.FindSystemTimeZoneById("India Standard Time"));
                DateTime utcdate = DateTime.ParseExact(strDate, "yyyy-MM-dd h:mm:ss", System.Globalization.CultureInfo.InvariantCulture);
                var istdate = TimeZoneInfo.ConvertTimeFromUtc(utcdate, TimeZoneInfo.FindSystemTimeZoneById("India Standard Time"));
                DateTime enteredDate = DateTime.Parse(istdate.ToString());
                string a = enteredDate.ToString("yyyy-MM-dd HH:mm:ss");
                Console.WriteLine(a);
                return a.ToString();
            }
            catch (Exception e)
            {
                return "exception";
            }

        }
    }
     
}
